name: Release
on:
  push:
    branches:
      - master
jobs:
  test-and-release:
    runs-on: ubuntu-latest
    steps:
      # Initialize workspace
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: "16"
          registry-url: "https://registry.npmjs.org"
      # Run install, build & test to prevent errors
      - name: Install
        run: npm install
      - name: Test
        run: npm test
      - name: Build
        run: npm run build
      # Check if package.json version changed & parse the version
      - name: Check and parse changed package version
        id: check_version
        run: |
          VERSION=$(git diff HEAD~1 HEAD package.json | sed -rn 's/^\+.*"version".*:.*"(.*)",?/\1/p')
          POSTFIX=$(echo $VERSION | sed -rn 's/^.*-(.*)$/\1/p')
          echo "::set-output name=version::$VERSION"
          echo "::set-output name=postfix::$POSTFIX"
      # No change -> stop the workflow here
      - name: Version change not detected
        if: ${{ steps.check_version.outputs.version == '' }}
        run: 'echo "No version change detected, skipping release"'
      # Version change detected -> publish to NPM, push a new tag and create a release
      - name: Version change detected
        if: ${{ steps.check_version.outputs.version != '' }}
        run: 'echo "Version change detected! New version: ${{ steps.check_version.outputs.version }}"'
      - name: Publish
        if: ${{ steps.check_version.outputs.version != '' }}
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Tag
        if: ${{ steps.check_version.outputs.version != '' }}
        run: git tag -a v${{ steps.check_version.outputs.version }} -m "Version ${{ steps.check_version.outputs.version }}" && git push --tags
      - name: Create Release
        if: ${{ steps.check_version.outputs.version != '' }}
        uses: softprops/action-gh-release@v1
        with:
          tag: v${{ steps.check_version.outputs.version }}
          prerelease: ${{ steps.check_version.outputs.postfix != '' }}
