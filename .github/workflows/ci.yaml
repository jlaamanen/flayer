name: CI

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches: [master]
  release:
    types: [released]

env:
  NODE_VERSION: 18

jobs:
  # Test and build all PRs, pushes to master and releases
  test-and-build:
    name: Test & build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
      - run: npm ci
      - run: npm test
      - run: npm run build
      # Cache built files for the publish job
      - uses: actions/cache@v3
        with:
          path: |
            dist
            client-lib
          key: ${{ github.sha }}

  # Publish the package to NPM on release
  publish:
    name: Publish
    if: ${{ github.event_name == 'release' }}
    runs-on: ubuntu-latest
    needs: [test-and-build]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
          registry-url: "https://registry.npmjs.org"
      # Restore built files from cache
      - uses: actions/cache@v3
        with:
          path: |
            dist
            client-lib
          key: ${{ github.sha }}
      # Update release version from the tag name (don't let NPM create new tags)
      - run: npm version --no-git-tag-version ${{ github.event.release.tag_name }}
      # Publish the package
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      # After a successful publish, commit the new version to the repository (will not trigger new workflows!)
      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Release ${{ github.event.release.tag_name }}
